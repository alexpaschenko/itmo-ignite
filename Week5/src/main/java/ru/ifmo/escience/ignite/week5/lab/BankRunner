package ru.ifmo.escience.ignite.week5.lab;

import org.apache.ignite.Ignite;
import org.apache.ignite.Ignition;
import org.apache.ignite.cache.CacheKeyConfiguration;
import org.apache.ignite.cache.CacheMode;
import org.apache.ignite.cache.query.SqlFieldsQuery;
import org.apache.ignite.configuration.CacheConfiguration;

public class BankRunner {
    public static void main(String[] args) {
        CacheConfiguration<Long, Bank> bankConfig = new CacheConfiguration<>("Bank");
        bankConfig.setIndexedTypes(Integer.class, Bank.class);
        bankConfig.setCacheMode(CacheMode.PARTITIONED);

        CacheConfiguration<Long, BankClientToAccount> bankClientToAccountConfig = new CacheConfiguration<>("BankClientToAccount");
        CacheConfiguration<Long, Object> ccyAccountConfig = new CacheConfiguration<>("CcyAccount");

        Ignite node = Ignition.start("Week5/config/lab/default-client.xml");
        node.getOrCreateCache(bankConfig);
        node.getOrCreateCache(bankClientToAccountConfig);
        node.getOrCreateCache(ccyAccountConfig);



        node.cache("Bank").query(new SqlFieldsQuery("CREATE TABLE if not exists \"PUBLIC\".BankClient(id long, name varchar, active boolean, primary key(id))" +
                " WITH \"cache_name=BankClient,value_type=BankClient\""));

        CacheKeyConfiguration bankToClientConfiguration = new CacheKeyConfiguration(BankClientToAccount.class);
        CacheKeyConfiguration bankAccountConfiguration = new CacheKeyConfiguration("CcyAccount", "id");

        node.configuration().setCacheKeyConfiguration(bankToClientConfiguration, bankAccountConfiguration);
//        node.getOrCreateCache("")


        node.cache("Bank").put(1, new Bank(1, "Main"));
        node.cache("Bank").put(2, new Bank(2, "Additional"));
        node.cache("Bank").put(3, new Bank(3, "Main"));

        //            node1.cache("Person").query(new SqlFieldsQuery("insert into \"PUBLIC\".Car(id, person_id, license) " +
        //                    "values(1, 5, 'a111aa')"));
        node.cache("Bank").query(new SqlFieldsQuery("insert into \"PUBLIC\".BankClient(id, name, active)" +
                " values (1, 'Vasya', TRUE), (2, 'Alex', FALSE), (2, 'John', TRUE)"));


        System.out.println(node.cacheNames());
    }
}
